within wsm_simulations;

model ros_inverted_pendelum_controller
  ros_inverted_pendelum_reward_function ros_inverted_pendelum_reward_function1 annotation(Placement(visible = true, transformation(origin = {142.791, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  QTableSetting settingVelocity(minimum = -2, maximum = 2, count = 9) annotation(Placement(visible = true, transformation(origin = {105.796, 7.615}, extent = {{-4.204, -4.204}, {4.204, 4.204}}, rotation = 0)));
  QTableSetting settingAngularVelocity(minimum = -15, maximum = 15, count = 15) annotation(Placement(visible = true, transformation(origin = {105.796, -2.385}, extent = {{-4.204, -4.204}, {4.204, 4.204}}, rotation = 0)));
  QTableSetting settingAngle(count = 15, minimum = -3.1416, maximum = 3.1416) annotation(Placement(visible = true, transformation(origin = {105.796, -12.385}, extent = {{-4.204, -4.204}, {4.204, 4.204}}, rotation = 0)));
  QTableSetting settingActionMotorResponse(minimum = -12, maximum = 12, count = 14) annotation(Placement(visible = true, transformation(origin = {139.872, -10.128}, extent = {{-4.872, -4.872}, {4.872, 4.872}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression learningRate(y = 0.05) annotation(Placement(visible = true, transformation(origin = {120, -35}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression epsilon(y = 0.05) annotation(Placement(visible = true, transformation(origin = {120, -50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression discountFactor(y = 0.9) annotation(Placement(visible = true, transformation(origin = {120, -65}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  QTable qTable1(stateDims = 3) annotation(Placement(visible = true, transformation(origin = {165, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.ROS_Node rOS_Node1(node_name = "inverted_pendelum_controller") annotation(Placement(visible = true, transformation(origin = {-85, 10}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Readers.RealReader velocityReader(path = "velocity") annotation(Placement(visible = true, transformation(origin = {10, 75}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Readers.RealReader angleReader(path = "angle") annotation(Placement(visible = true, transformation(origin = {10, 25}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Readers.RealReader angularVelocityReader(path = "angular_velocity") annotation(Placement(visible = true, transformation(origin = {10, 50}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Subscriber subscriber1(topic = "pendelum_state") annotation(Placement(visible = true, transformation(origin = {-30, 25}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Publisher publisher1(topic = "pendelum_motor", msgSitePackageURI = "modelica://wsm_simulations/../../../../devel/lib/site-packages", datatype = "wsm_simulations/PendelumMotor", internalMessagingPolicy = ROSPlug.Publisher.InternalMessagingPolicy.Only) annotation(Placement(visible = true, transformation(origin = {-30, -20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Writers.RealWriter motorResponseWriter(path = "motor_response") annotation(Placement(visible = true, transformation(origin = {15, -20}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.tinyDelay tinyDelay1 annotation(Placement(visible = true, transformation(origin = {37.451, -35}, extent = {{2.549, -2.549}, {-2.549, 2.549}}, rotation = 0)));
  ROSPlug.tinyDelay tinyDelay2 annotation(Placement(visible = true, transformation(origin = {37.5, 0}, extent = {{-2.5, -2.5}, {2.5, 2.5}}, rotation = 0)));
  ROSPlug.tinyDelay tinyDelay3 annotation(Placement(visible = true, transformation(origin = {62.451, -10}, extent = {{2.549, -2.549}, {-2.549, 2.549}}, rotation = -270)));
equation
  connect(discountFactor.y, qTable1.discount_factor) annotation(Line(visible = true, origin = {159, -43.333}, points = {{-28, -21.667}, {14, -21.667}, {14, 43.333}}, color = {1, 37, 163}));
  connect(learningRate.y, qTable1.learning_rate) annotation(Line(visible = true, origin = {153, -23.333}, points = {{-22, -11.667}, {11, -11.667}, {11, 23.333}}, color = {1, 37, 163}));
  connect(settingActionMotorResponse.settingConnector1, qTable1.actionSettingConnector1) annotation(Line(visible = true, origin = {154.563, -7.516}, points = {{-10.873, -3.758}, {5.437, -3.758}, {5.437, 7.516}}, color = {0, 128, 128}));
  connect(settingAngularVelocity.settingConnector1, qTable1.stateSettingConnector1[2]) annotation(Line(visible = true, origin = {133.375, -1.687}, points = {{-24.284, -1.687}, {-3.375, -1.687}, {-3.375, 1.687}, {22.625, 1.687}}, color = {0, 128, 128}));
  connect(epsilon.y, qTable1.epsilon) annotation(Line(visible = true, origin = {156, -33.333}, points = {{-25, -16.667}, {12.5, -16.667}, {12.5, 33.333}}, color = {1, 37, 163}));
  connect(settingVelocity.settingConnector1, qTable1.stateSettingConnector1[1]) annotation(Line(visible = true, origin = {133.375, 3.313}, points = {{-24.284, 3.313}, {-3.375, 3.313}, {-3.375, -3.313}, {22.625, -3.313}}, color = {0, 128, 128}));
  connect(settingAngle.settingConnector1, qTable1.stateSettingConnector1[3]) annotation(Line(visible = true, origin = {133.375, -6.687}, points = {{-24.284, -6.687}, {-3.375, -6.687}, {-3.375, 6.687}, {22.625, 6.687}}, color = {0, 128, 128}));
  connect(ros_inverted_pendelum_reward_function1.reward, qTable1.reward) annotation(Line(visible = true, origin = {160.93, 40}, points = {{-8.139, 10}, {4.07, 10}, {4.07, -20}}, color = {1, 37, 163}));
  connect(subscriber1.message1, angleReader.messageInConnector1) annotation(Line(visible = true, origin = {-9.475, 35}, points = {{-10.83, -10}, {-0.525, -10}, {-0.525, -10}, {10.16, -10}}, color = {64, 64, 64}));
  connect(subscriber1.message1, angularVelocityReader.messageInConnector1) annotation(Line(visible = true, origin = {-10.765, 27.5}, points = {{-9.54, -2.5}, {0.765, -2.5}, {0.765, 22.5}, {11.45, 22.5}}, color = {64, 64, 64}));
  connect(subscriber1.subscriberPublisherConnector1, rOS_Node1.rosNodeConnector1) annotation(Line(visible = true, origin = {-59.694, 30}, points = {{19.194, -5}, {-0.306, -5}, {-0.306, -20}, {-16.105, -20}}));
  connect(subscriber1.message1, velocityReader.messageInConnector1) annotation(Line(visible = true, origin = {-10.765, 52.5}, points = {{-9.54, -27.5}, {0.765, -27.5}, {0.765, 22.5}, {11.45, 22.5}}, color = {64, 64, 64}));
  connect(publisher1.subscriberPublisherConnector1, rOS_Node1.rosNodeConnector1) annotation(Line(visible = true, origin = {-59.694, 10}, points = {{19.194, -30}, {-0.306, -30}, {-0.306, 0}, {-16.105, 0}}));
  connect(publisher1.message1, motorResponseWriter.messageOutConnector1) annotation(Line(visible = true, origin = {-9.481, -19.266}, points = {{-10.6, 0.734}, {2.855, 0.734}, {2.855, -0.734}, {14.891, -0.734}}, color = {64, 64, 64}));
  connect(qTable1.action, motorResponseWriter.y) annotation(Line(visible = true, origin = {140, -5}, points = {{35, 15}, {40, 15}, {40, -15}, {-115, -15}}, color = {1, 37, 163}));
  connect(tinyDelay1.y, publisher1.trigger) annotation(Line(visible = true, origin = {4.58, -29.398}, points = {{29.608, -5.398}, {-11.206, -5.398}, {-11.206, 5.398}, {-24.735, 5.398}}, color = {255, 0, 255}));
  connect(tinyDelay2.y, qTable1.trigger) annotation(Line(visible = true, origin = {108.2, 8.4}, points = {{-67.5, -8.2}, {-9.871, -8.2}, {-9.871, 6.6}, {3.509, 6.6}, {3.509, 1.6}, {47.8, 1.6}}, color = {255, 0, 255}));
  connect(subscriber1.trigger, tinyDelay2.u) annotation(Line(visible = true, origin = {-3.447, 17.78}, points = {{-16.709, 2.579}, {-6.553, 2.579}, {-6.553, -17.58}, {39.049, -17.58}}, color = {190, 52, 178}));
  connect(tinyDelay3.y, tinyDelay1.u) annotation(Line(visible = true, origin = {54.627, -27.618}, points = {{7.62, 14.356}, {7.62, -7.178}, {-15.24, -7.178}}, color = {255, 0, 255}));
  connect(tinyDelay3.y, motorResponseWriter.trigger) annotation(Line(visible = true, origin = {49.831, -20.421}, points = {{12.416, 7.158}, {12.416, -3.579}, {-24.831, -3.579}}, color = {255, 0, 255}));
  connect(velocityReader.y, ros_inverted_pendelum_reward_function1.velocity) annotation(Line(visible = true, origin = {62.75, 68}, points = {{-42.75, 7}, {-22.75, 7}, {-22.75, -12}, {71.041, -12}}, color = {1, 37, 163}));
  connect(angularVelocityReader.y, ros_inverted_pendelum_reward_function1.angularVelocity) annotation(Line(visible = true, origin = {34, 52.5}, points = {{-14, -2.5}, {-11.5, -2.5}, {-11.5, -2.5}, {99.791, -2.5}}, color = {1, 37, 163}));
  connect(angleReader.y, ros_inverted_pendelum_reward_function1.angle) annotation(Line(visible = true, origin = {62.75, 37}, points = {{-42.75, -12}, {-22.75, -12}, {-22.75, 7}, {71.041, 7}}, color = {1, 37, 163}));
  connect(tinyDelay2.y, tinyDelay3.u) annotation(Line(visible = true, origin = {55.065, -2.555}, points = {{-14.365, 2.755}, {7.182, 2.755}, {7.182, -5.51}}, color = {255, 0, 255}));
  connect(velocityReader.y, qTable1.state[1]) annotation(Line(visible = true, origin = {87.667, 48.665}, points = {{-67.667, 26.335}, {-47.667, 26.335}, {-47.716, 7.31}, {32.187, 7.31}, {32.333, -33.665}, {68.333, -33.665}}, color = {1, 37, 163}));
  connect(angularVelocityReader.y, qTable1.state[2]) annotation(Line(visible = true, origin = {106.711, 33.333}, points = {{-86.711, 16.667}, {3.289, 16.667}, {3.289, 1.667}, {13.289, 1.667}, {13.289, -18.333}, {49.289, -18.333}}, color = {1, 37, 163}));
  connect(angleReader.y, qTable1.state[3]) annotation(Line(visible = true, origin = {92, 28.505}, points = {{-72, -3.505}, {-52, -3.505}, {-52, 15.514}, {8, 15.514}, {8, -0.104}, {28, -0.104}, {28, -13.505}, {64, -13.505}}, color = {1, 37, 163}));
  annotation(Diagram(coordinateSystem(extent = {{-100, -75}, {190, 95}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Text(visible = true, textColor = {64, 64, 64}, extent = {{-150, 110}, {150, 150}}, textString = "%name"), Rectangle(visible = true, lineColor = {191, 191, 191}, fillColor = {255, 255, 255}, fillPattern = FillPattern.HorizontalCylinder, lineThickness = 4, extent = {{-90, -90}, {90, 90}}, radius = 25), Rectangle(visible = true, origin = {-4.648, 24.511}, rotation = 5, lineColor = {0, 67, 109}, fillColor = {169, 0, 0}, pattern = LinePattern.None, fillPattern = FillPattern.Solid, lineThickness = 0, extent = {{-4.67, -48.292}, {4.67, 48.292}}), Rectangle(visible = true, origin = {0, -50}, fillColor = {169, 0, 0}, pattern = LinePattern.None, fillPattern = FillPattern.Solid, lineThickness = 0, extent = {{-40, -20}, {40, 20}}), Ellipse(visible = true, origin = {-0.397, -25}, fillColor = {169, 0, 0}, pattern = LinePattern.None, fillPattern = FillPattern.Solid, extent = {{-5, -5}, {5, 5}}), Rectangle(visible = true, origin = {-47.006, 35.183}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {-47.006, 20.016}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {-47.006, 4.785}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {0, 35.215}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {0, 20.048}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {0, 4.817}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {46.497, 35.215}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {46.497, 20.048}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}}), Rectangle(visible = true, origin = {46.497, 4.817}, lineColor = {128, 128, 128}, fillColor = {255, 255, 255}, fillPattern = FillPattern.Sphere, extent = {{-23.503, -7.495}, {23.503, 7.495}})}));
end ros_inverted_pendelum_controller;
