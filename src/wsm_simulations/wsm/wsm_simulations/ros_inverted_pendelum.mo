within wsm_simulations;

model ros_inverted_pendelum
  IntroductoryExamples.Systems.Components.ElectricalMotor motor annotation(Placement(visible = true, transformation(origin = {10, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  IntroductoryExamples.Systems.Components.Pendulum pendulum annotation(Placement(visible = true, transformation(origin = {90, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  IntroductoryExamples.Systems.Components.GearBox gear annotation(Placement(visible = true, transformation(origin = {50, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.ROS_Node rOS_Node1(node_name = "inverted_pendelum_simulation", SampleRate = 200) annotation(Placement(visible = true, transformation(origin = {-102.242, 12.797}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Subscriber subscriber1(topic = "pendelum_motor") annotation(Placement(visible = true, transformation(origin = {-60, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Publisher publisher1(topic = "pendelum_state", datatype = "wsm_simulations/PendelumState", msgSitePackageURI = "modelica://wsm_simulations/../../../../devel/lib/site-packages") annotation(Placement(visible = true, transformation(origin = {6.969, -5}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Readers.RealReader realReader1(path = "motor_response") annotation(Placement(visible = true, transformation(origin = {-25, 40}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Writers.RealWriter realWriter1(path = "angle") annotation(Placement(visible = true, transformation(origin = {85, 7.129}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Writers.RealWriter realWriter2(path = "position") annotation(Placement(visible = true, transformation(origin = {85, -13.389}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.SampleTrigger sampleTrigger1(period = period) annotation(Placement(visible = true, transformation(origin = {5, -70}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.SampleTrigger sampleTriggerOffset(period = period, startTime = 0.05) annotation(Placement(visible = true, transformation(origin = {5, -37.33}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Readers.RealReader realReader2(path = "reward") annotation(Placement(visible = true, transformation(origin = {-25, 67.239}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interaction.Show.RealValue reward annotation(Placement(visible = true, transformation(origin = {10, 67.239}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Readers.IntegerReader integerReader1(path = "explored_states") annotation(Placement(visible = true, transformation(origin = {-25, 15}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interaction.Show.IntegerValue integerValue1 annotation(Placement(visible = true, transformation(origin = {10, 15}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  ROSPlug.Writers.RealWriter realWriter3(path = "delta_time") annotation(Placement(visible = true, transformation(origin = {85, -35}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Sources.RealExpression realExpression1(y = period) annotation(Placement(visible = true, transformation(origin = {85, -55}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  parameter Modelica.SIunits.Time period(min = Modelica.Constants.small, start = 0.01) = 0.045 "Sample period (sampleTriggerOffset.period)";
  ROSPlug.Readers.RealReader realReader3(path = "qvalue") annotation(Placement(visible = true, transformation(origin = {35, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
  Modelica.Blocks.Interaction.Show.RealValue qvalue annotation(Placement(visible = true, transformation(origin = {70, 80}, extent = {{-10, -10}, {10, 10}}, rotation = 0)));
equation
  connect(motor.flange, gear.flange_a) annotation(Line(visible = true, points = {{-10, 0}, {10, 0}}, color = {64, 64, 64}, origin = {30, 40}));
  connect(gear.flange_b, pendulum.flange_a) annotation(Line(visible = true, origin = {71.034, 40}, points = {{-11.034, 0}, {8.966, 0}}, color = {0, 127, 0}));
  connect(subscriber1.subscriberPublisherConnector1, rOS_Node1.rosNodeConnector1) annotation(Line(visible = true, origin = {-77.024, -50}, points = {{6.524, 90}, {-2.976, 90}, {-2.976, 62.797}, {-16.017, 62.797}}));
  connect(publisher1.subscriberPublisherConnector1, rOS_Node1.rosNodeConnector1) annotation(Line(visible = true, origin = {-78.769, -40}, points = {{75.238, 35}, {-1.231, 35}, {-1.231, 52.797}, {-14.272, 52.797}}));
  connect(subscriber1.message1, realReader1.messageInConnector1) annotation(Line(visible = true, origin = {-42.39, 40}, points = {{-8.075, -0}, {8.075, 0}}, color = {64, 64, 64}));
  connect(realReader1.y, motor.u) annotation(Line(visible = true, origin = {6, 51.321}, points = {{-21, -11.321}, {-18.409, -11.321}, {-18.409, -11.321}, {-7, -11.321}}, color = {1, 37, 163}));
  connect(pendulum.angle, realWriter1.y) annotation(Line(visible = true, origin = {94, 17.5}, points = {{7, 17.5}, {11, 17.5}, {11, -10.371}, {1, -10.371}}, color = {1, 37, 163}));
  connect(pendulum.position, realWriter2.y) annotation(Line(visible = true, origin = {101.5, 10}, points = {{-0.5, 35}, {18.5, 35}, {18.5, -23.389}, {-6.5, -23.389}}, color = {1, 37, 163}));
  connect(realWriter2.messageOutConnector1, publisher1.message1) annotation(Line(visible = true, origin = {58.074, -8.461}, points = {{17.335, -4.928}, {11.926, -4.928}, {11.926, 4.928}, {-41.187, 4.928}}, color = {64, 64, 64}));
  connect(realWriter1.messageOutConnector1, publisher1.message1) annotation(Line(visible = true, origin = {58.074, 1.798}, points = {{17.335, 5.331}, {11.926, 5.331}, {11.926, -5.331}, {-41.187, -5.331}}, color = {64, 64, 64}));
  connect(sampleTrigger1.y, realWriter2.trigger) annotation(Line(visible = true, origin = {70.25, -31.194}, points = {{-54.25, -38.805}, {44.75, -38.805}, {44.75, 13.805}, {24.75, 13.805}}, color = {255, 0, 255}));
  connect(sampleTrigger1.y, realWriter1.trigger) annotation(Line(visible = true, origin = {70.25, -20.935}, points = {{-54.25, -49.064}, {44.75, -49.064}, {44.75, 24.064}, {24.75, 24.064}}, color = {255, 0, 255}));
  connect(sampleTriggerOffset.y, publisher1.trigger) annotation(Line(visible = true, origin = {23.336, -19.5}, points = {{-7.336, -17.83}, {6.664, -17.83}, {6.664, 10.5}, {-6.522, 10.5}}, color = {255, 0, 255}));
  connect(subscriber1.message1, realReader2.messageInConnector1) annotation(Line(visible = true, origin = {-42.432, 55}, points = {{-8.033, -15}, {-0.043, -15}, {-0.043, 12.239}, {8.117, 12.239}}, color = {64, 64, 64}));
  connect(realReader2.y, reward.numberPort) annotation(Line(visible = true, origin = {-8.721, 67.5}, points = {{-6.279, -0.261}, {0.336, -0.261}, {0.336, -0.261}, {7.221, -0.261}}, color = {1, 37, 163}));
  connect(subscriber1.message1, integerReader1.messageInConnector1) annotation(Line(visible = true, origin = {-42.3, 27.5}, points = {{-8.165, 12.5}, {0.09, 12.5}, {0.09, -12.5}, {7.985, -12.5}}, color = {64, 64, 64}));
  connect(integerReader1.y, integerValue1.numberPort) annotation(Line(visible = true, origin = {-8.25, 15}, points = {{-6.75, 0}, {6.75, 0}}, color = {255, 127, 0}));
  connect(realWriter3.messageOutConnector1, publisher1.message1) annotation(Line(visible = true, origin = {58.074, -19.266}, points = {{17.335, -15.734}, {11.926, -15.734}, {11.926, 15.734}, {-41.187, 15.734}}, color = {64, 64, 64}));
  connect(sampleTrigger1.y, realWriter3.trigger) annotation(Line(visible = true, origin = {85.25, -54.5}, points = {{-69.25, -15.5}, {29.75, -15.5}, {29.75, 15.5}, {9.75, 15.5}}, color = {255, 0, 255}));
  connect(realExpression1.y, realWriter3.y) annotation(Line(visible = true, origin = {107.75, -45}, points = {{-11.75, -10}, {12.25, -10}, {12.25, 10}, {-12.75, 10}}, color = {1, 37, 163}));
  connect(subscriber1.message1, realReader3.messageInConnector1) annotation(Line(visible = true, origin = {-16.947, 69.367}, points = {{-33.518, -29.367}, {-25.552, -29.367}, {-25.552, 15.633}, {8.819, 15.633}, {8.819, 10.633}, {42.632, 10.633}}, color = {64, 64, 64}));
  connect(realReader3.y, qvalue.numberPort) annotation(Line(visible = true, origin = {51.75, 80}, points = {{-6.75, 0}, {6.75, 0}}, color = {1, 37, 163}));
  annotation(experiment(StopTime = 100000.0, Interval = 0.004, __Wolfram_SynchronizeWithRealTime = true), __Wolfram, Diagram(coordinateSystem(extent = {{-150, -90}, {150, 90}}, preserveAspectRatio = true, initialScale = 0.1, grid = {5, 5})), Icon(coordinateSystem(extent = {{-100, -100}, {100, 100}}, preserveAspectRatio = true, initialScale = 0.1, grid = {10, 10}), graphics = {Rectangle(visible = true, lineColor = {0, 114, 195}, fillColor = {255, 255, 255}, extent = {{-100, -100}, {100, 100}}, radius = 25), Text(visible = true, textColor = {64, 64, 64}, extent = {{-150, 110}, {150, 150}}, textString = "%name")}));
end ros_inverted_pendelum;
